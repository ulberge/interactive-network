import nj from 'numjs';

export function getNetworkSettings() {
  const defaultKernel = nj.zeros([9, 9]).tolist();
  const c = 1;

  const filters = [
    [
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, -1, -1, 0, -1, -1, -1, 0],
        [0, -1, -1, -1, 0, -1, -1, -1, 0],
      ],
      defaultKernel.slice(),
      [ // hor
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, -1, -1, -1, -1, -1, -1, 0],
        [0, -1, -1, -1, -1, -1, -1, -1, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, -1, -1, -1, -1, -1, -1, -1, 0],
        [0, -1, -1, -1, -1, -1, -1, -1, 0],
      ],
      defaultKernel.slice(),

      defaultKernel.slice(),

      [ // bottomright corner
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, -c, -c, -c, 0],
        [0, 0, 0, 0, 0, -c, -c, -c, 0],
        [0, 0, 0, 0, 0, c, c, c, 0],
        [0, 0, 0, 0, 0, -c, -c, -c, 0],
        [0, 0, 0, 0, 0, -c, -c, -c, 0],
      ],
      [ // bottomleft corner
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -c, -c, -c, 0, 0, 0, 0, 0],
        [0, -c, -c, -c, 0, 0, 0, 0, 0],
        [0, c, c, c, 0, 0, 0, 0, 0],
        [0, -c, -c, -c, 0, 0, 0, 0, 0],
        [0, -c, -c, -c, 0, 0, 0, 0, 0],
      ],

      defaultKernel.slice(),
      defaultKernel.slice(),
    ],
    [
      [ // vert
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, -1, -1, 1, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],

      defaultKernel.slice(),

      [ // bottomright corner
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),

      defaultKernel.slice(),
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, -c, -c, c, -c, -c],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
    ],
    [
      [ // vert
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [-1, -1, 1, -1, -1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),

      defaultKernel.slice(),

      defaultKernel.slice(),
      [ // bottomright corner
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],

      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [-c, -c, c, -c, -c, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),
    ],
    [
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, -1, -1, 0, 0, 0, 0, 0],
        [0, -1, -1, -1, 0, 0, 0, 0, 0],
        [0, -1, -1, -1, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0,-1, 0.5, 1, 0.5,-1, 0, 0],
        [0,-1, 0.5, 1, 0.5,-1, 0, 0, 0],
        [-1, 0.5, 1, 0.5,-1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),
      defaultKernel.slice(),

      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0,-c, 1, 2, 1, -c, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],

      defaultKernel.slice(),
      defaultKernel.slice(),

      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        // [0, 0, -c, -c, c, -c, -c, 0, 0],
        // [0, -c, -c, c, -c, -c, 0, 0, 0],
        [-c, c, c, c, -c, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),
    ],
    [
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, -1, -1, -1, 0],
        [0, 0, 0, 0, 0, -1, -1, -1, 0],
        [0, 0, 0, 0, 0, -1, -1, -1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      defaultKernel.slice(),
      defaultKernel.slice(),
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0,-1, 0.5, 1, 0.5,-1, 0, 0],
        [0, 0, 0,-1, 0.5, 1, 0.5,-1, 0],
        [0, 0, 0, 0,-1, 0.5, 1, 0.5,-1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],

      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0,-c, 1, 2, 1, -c, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],

      defaultKernel.slice(),
      defaultKernel.slice(),

      defaultKernel.slice(),
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        // [0, 0, -c, -c, c, -c, -c, 0, 0],
        // [0, 0, 0, -c, -c, c, -c, -c, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, -c, c, c, c, -c],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
    ],
  ];

  const r = 1;
  const filters1 = [
    [
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, r, r, r, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, r, r, r, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
      ],
    ],
    // [
    //   defaultKernel.slice(),
    //   defaultKernel.slice(),
    //   defaultKernel.slice(),
    //   [
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //   ],
    //   [
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 1, 1, 1, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //     [0, 0, 0, 0, 0, 0, 0, 0, 0],
    //   ],
    // ],
  ];

  const layerInfos = [
    {
      type: 'maxPool2d',
      poolSize: 3
    },
    {
      type: 'conv2d',
      kernelSize: 9,
      filters
    },
    {
      type: 'maxPool2d',
      poolSize: 3
    },
    {
      type: 'conv2d',
      kernelSize: 9,
      filters: filters1
    },
    // {
    //   type: 'conv2d',
    //   filters: filters2
    // },
  ];

  const kernelInfos = [
    {
      type: 0,
      angles: [0, 0.5, 0.25, 0.75],
    },
    {
      type: 2,
      angles: [0.25, 1, 1.5],
    },
    {
      type: 7,
      angles: [0, 0.75],
    },
  ];
  const kernelFilter = [];
  kernelInfos.forEach(d => d.angles.forEach(angle => kernelFilter.push(d.type + '_' + (angle * Math.PI).toFixed(2))));

  return { layerInfos, kernelFilter };
}
